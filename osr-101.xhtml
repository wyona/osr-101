<?xml version="1.0"?>

<?xml-stylesheet type="text/xsl" href="xhtml.xsl"?>



<html>
<head>
</head>
<body>
<h1>Content Management User Interface API</h1>
<h2>Open Specification Request 101</h2>
<dt>Version: 0.1.0</dt>
<br/>
<dt>Date: 5 July 2005</dt>
<br/>
<dt>Editors:</dt>
<dd>
Michael Wechner <a href="mailto:michael.wechner@wyona.com?subject=OSR-101">michael.wechner@wyona.com</a>
<br/>
Christian Stocker <a href="mailto:chregu@bitflux.ch?subject=OSR-101">chregu@bitflux.ch</a>
<br/>
Zhiwu Xie <a href="mailto:zxie@ece.unm.edu?subject=OSR-101">zxie@ece.unm.edu</a>
</dd>
<hr/>
<h2>Abstract</h2>
<p>
Basically every Content Management System is implementing the same functionality from
a user interface point of view.  Such basic functionalities are for instance creating a new document or opening
an existing document for editing. More advanced functionalities are for instance changing workflow states and
accessing revisons.
</p>

<p>
The goal of OSR-101 is to define a generic interface between a CMS client (e.g. OpenOffice.org, BXE, ...)
and an actual CMS on the server side (e.g. Silva, Bitflux CMS, Apache Lenya, ...) to free the user interface
from the server side implementation.
</p>

<h2>Table of contents</h2>
<ol>
  <li><a href="#introspection">Introspection</a></li>
  <li>Menus</li>
  <li>Editing
    <ol>
      <li><a href="#editing-new">New</a></li>
      <li><a href="#editing-open">Open</a></li>
      <li><a href="#editing-save">Save</a></li>
      <li>Save As</li>
      <li><a href="#editing-exit">Exit</a></li>
      <li>Close</li>
      <li>Close All</li>
      <li>Save All</li>
      <li><a href="#editing-link-lookup">Hypertext Link Lookup</a></li>
    </ol>
  </li>
  <li>Workflow</li>
  <li>Revisions</li>
  <li>Access Control</li>
  <li>Scheduling</li>
</ol>

<hr/>

<a name="introspection"/>
<h2>Introspection</h2>
<p>
The communication between the client and server can be initialized by introspection.
This also allows the server to tell the client of it's capabilities (e.g. level 1, 2, 3 compliance).
</p>

<a name="editing-new"/>
<h2>New</h2>
<p>
The action "New" allows to create a new document by selecting a template.
The CMS/server needs to provide a template listing to the client such that the client can provide a dialog in order to let the user select a template.
The "New" action entails a "Save As" action in order to allow specifying a new document name when actually saving.
</p>

<h3>Request</h3>
<p>
...
</p>

<h3>Response</h3>
<pre>
<![CDATA[
<?xml version="1.0"?>

<cmui>
  <response type="edit-new">
  <edit-new>
    <templates>
      <template name="Letter" src="http://foo.bar/letter.xml"/>
      <template name="Article" src="http://foo.bar/article.xml"/>
    </templates>
  </edit-new>
  </response>
</cmui>
]]>
</pre>

<a name="editing-open"/>
<h2>Open</h2>
<p>
The action "Open" allows to open an existing document.
If the client has already a document loaded and a new document will be opened,
then the loaded document might be closed automatically (please also see "Close" and "Save All").
</p>

<p>
The CMS needs to provide a directory listing to the client such that the client can provide a dialog
in order to let the user select a document.
</p>

<p>
When a user attempts to open a document, then the server needs to check if the document
might have been locked already respectively opened by another user.
If it has already been locked respectively opened by another user, then the CMS needs to
communicate to the client that this document is currently locked and maybe
provide a functionality to break the lock.
Otherwise the document needs to be locked on the server side if the document is being opened.
</p>

<p>
The document path needs to be kept within the client in order to allow saving to the original document on the server side.
</p>

<a name="editing-save"/>
<h2>Save</h2>
<p>
The "Save" action allows to save a document to the path which was selected when loading the document with the "Open" action.
</p>

<p>
It might be assumed that no temporary copies are being used on the server side, but rather the original document is being overwritten. This might lead to the confusing situation, that changes on the server side can been seen, which are only temporarily.
</p>

<a name="editing-exit"/>
<h2>Exit</h2>
<p>
The "Exit" action allows to quit the client. If the user clicks on the "Exit" menu item,
then the client opens a dialog, where the user can select the following buttons/options:
</p>

<ul>
  <li>Save</li>
  <li>Save As</li>
  <li>Don't save (Exit but do not save)</li>
  <li>Cancel (Do not exit)</li>
</ul>
  
<p>
If a lock has been created during opening, then this locks needs to be removed at this point.
In case the CMS would support breaking the lock by another user, then the CMS should communicate
a broken lock to the client.
</p>

<a name="editing-link-lookup"/>
<h2>Hypertext Link Lookup</h2>
<p>
The hypertext link lookup functionality allows to add a hypertext link
to a text. One selects part of a text and clicks on the link icon which is triggering
a request to the server(s) in order to provide the content resp. interface for a link
selecting dialog. One could imagine the following types of dialogs:
</p>

<ul>
  <li>Text Field to paste a link</li>
  <li>Search Field</li>
  <li>Simple resource list</li>
  <li>Hierarchical resource listing (tree-view)</li>
  <li>Topic Map with resource occurences (graph-view)</li>
</ul>

<h3>Response: Search Field</h3>
<pre>
<![CDATA[
<?xml version="1.0"?>

<cmui>
  <response type="edit-link">
  <edit-link>
    <search src="http://foo.bar/search"/>
  </edit-link>
  </response>
</cmui>
]]>
</pre>

<h3>Response: Simple List</h3>
<pre>
<![CDATA[
<?xml version="1.0"?>

<cmui>
  <response type="edit-link">
  <edit-link>
    <simple-list>
      <link name="Archibald Alexander Leach" src="http://foo.bar/leach.pdf"/>
      <link name="Cary Grant" src="http://foor.bar/cary_grant.html"/>
    </simple-list>
  </edit-link>
  </response>
</cmui>
]]>
</pre>

</body>
</html>
